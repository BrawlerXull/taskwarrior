// Mocks generated by Mockito 5.4.4 from annotations
// in taskwarrior/test/models/storage/exceptions/bad_certificate_exception_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:io' as _i2;
import 'dart:typed_data' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [X509Certificate].
///
/// See the documentation for Mockito's code generation for more information.
class MockX509Certificate extends _i1.Mock implements _i2.X509Certificate {
  MockX509Certificate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Uint8List get der => (super.noSuchMethod(
        Invocation.getter(#der),
        returnValue: _i3.Uint8List(0),
      ) as _i3.Uint8List);

  @override
  String get pem => (super.noSuchMethod(
        Invocation.getter(#pem),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#pem),
        ),
      ) as String);

  @override
  _i3.Uint8List get sha1 => (super.noSuchMethod(
        Invocation.getter(#sha1),
        returnValue: _i3.Uint8List(0),
      ) as _i3.Uint8List);

  @override
  String get subject => (super.noSuchMethod(
        Invocation.getter(#subject),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#subject),
        ),
      ) as String);

  @override
  String get issuer => (super.noSuchMethod(
        Invocation.getter(#issuer),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#issuer),
        ),
      ) as String);

  @override
  DateTime get startValidity => (super.noSuchMethod(
        Invocation.getter(#startValidity),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#startValidity),
        ),
      ) as DateTime);

  @override
  DateTime get endValidity => (super.noSuchMethod(
        Invocation.getter(#endValidity),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#endValidity),
        ),
      ) as DateTime);
}
